/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!*****************************************************!*\
  !*** ./audiogui/project/static/scripts/jsx/main.js ***!
  \*****************************************************/
eval("throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: /Users/pascalpham/audio/audiogui/project/static/scripts/jsx/main.js: Support for the experimental syntax 'jsx' isn't currently enabled (28:7):\\n\\n\\u001b[0m \\u001b[90m 26 | \\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 27 | \\u001b[39m    \\u001b[36mreturn\\u001b[39m (\\u001b[0m\\n\\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 28 | \\u001b[39m      \\u001b[33m<\\u001b[39m\\u001b[33mdiv\\u001b[39m\\u001b[33m>\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m    | \\u001b[39m      \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 29 | \\u001b[39m        \\u001b[33m<\\u001b[39m\\u001b[33minput\\u001b[39m type\\u001b[33m=\\u001b[39m\\u001b[32m\\\"text\\\"\\u001b[39m value\\u001b[33m=\\u001b[39m{\\u001b[36mthis\\u001b[39m\\u001b[33m.\\u001b[39mstate\\u001b[33m.\\u001b[39msearchString} onChange\\u001b[33m=\\u001b[39m{\\u001b[36mthis\\u001b[39m\\u001b[33m.\\u001b[39mhandleChange} placeholder\\u001b[33m=\\u001b[39m\\u001b[32m\\\"Search!\\\"\\u001b[39m \\u001b[33m/\\u001b[39m\\u001b[33m>\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 30 | \\u001b[39m        \\u001b[33m<\\u001b[39m\\u001b[33mul\\u001b[39m\\u001b[33m>\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 31 | \\u001b[39m          { countries\\u001b[33m.\\u001b[39mmap(\\u001b[36mfunction\\u001b[39m(country){ \\u001b[36mreturn\\u001b[39m \\u001b[33m<\\u001b[39m\\u001b[33mli\\u001b[39m\\u001b[33m>\\u001b[39m{country\\u001b[33m.\\u001b[39mname} \\u001b[33m<\\u001b[39m\\u001b[33m/\\u001b[39m\\u001b[33mli\\u001b[39m\\u001b[33m>\\u001b[39m }) }\\u001b[0m\\n\\nAdd @babel/preset-react (https://git.io/JfeDR) to the 'presets' section of your Babel config to enable transformation.\\nIf you want to leave it as-is, add @babel/plugin-syntax-jsx (https://git.io/vb4yA) to the 'plugins' section to enable parsing.\\n    at Parser._raise (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:748:17)\\n    at Parser.raiseWithData (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:741:17)\\n    at Parser.expectOnePlugin (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:9116:18)\\n    at Parser.parseExprAtom (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:10569:22)\\n    at Parser.parseExprSubscripts (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:10150:23)\\n    at Parser.parseUpdate (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:10130:21)\\n    at Parser.parseMaybeUnary (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:10119:17)\\n    at Parser.parseExprOps (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:9989:23)\\n    at Parser.parseMaybeConditional (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:9963:23)\\n    at Parser.parseMaybeAssign (/Users/pascalpham/audio/node_modules/@babel/parser/lib/index.js:9926:21)\");\n\n//# sourceURL=webpack://audiogui/./audiogui/project/static/scripts/jsx/main.js?");
/******/ })()
;